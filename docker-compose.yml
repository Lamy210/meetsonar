version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    deploy:
      resources:
        limits:
          memory: 256m
        reservations:
          memory: 128m
    image: postgres:15-alpine
    container_name: meetsonar-postgres
    environment:
      POSTGRES_DB: meetsonar
      POSTGRES_USER: meetsonar
      POSTGRES_PASSWORD: meetsonar_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - meetsonar-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U meetsonar"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: meetsonar-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://meetsonar:meetsonar_dev_password@postgres:5432/meetsonar
      PORT: 5000
    ports:
      - "5000:5000"
    volumes:
      - .:/app  # mount source code
      - /app/node_modules  # anonymous volume for dependencies
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - meetsonar-network
    # Resource limits for compose (applied by docker-compose)
    mem_limit: 512m
    mem_reservation: 256m
    cpus: 1.0
    # Run Drizzle migrations before starting the dev server
    command: ["sh", "-c", "npm run db:push && npm run dev"]
  # 'develop' section removed; live reload via volumes above

  # Frontend Development Server
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: meetsonar-frontend
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:5000
    ports:
      - "5173:5173"
    volumes:
      - .:/app  # mount source code; container manages dependencies
    depends_on:
      - backend
    networks:
      - meetsonar-network
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: '1.0'
        reservations:
          memory: 256m
          cpus: '0.5'
    command: npm run dev:client
# Removed custom 'develop' sync section

networks:
  meetsonar-network:
    driver: bridge

volumes:
  postgres_data:
